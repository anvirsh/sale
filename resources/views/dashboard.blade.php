<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Техзадание') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900"> 
					<span style="font-size:120%; color:green; font-style: italic;">1. Реализовать crud для работы с заказами/товарами </span></br>
					Поля заказа: </br>
					- дата заказа </br>
					валидируемый формат: 07.07.2020 </br>
					предусмотреть маску ввода: да </br>
					обязательность: да </br>
					- телефон </br>
					валидируемый формат: </br>
					+7 999 999 99 99 </br>
					+79999999999 </br>
					89999999999 </br>
					предусмотреть маску ввода: да </br>
					обязательность: нет </br>
					- email </br>
					валидируемый формат: email </br>
					обязательность: да </br>
					- адрес </br>
					в редактировании/создании заказа должна использоваться яндекс карта и осуществлено </br>
					геокодирование(поиск по адресу/координатам). В отображении заказа адрес должна </br>
					отображаться метка адреса </br>
					обязательность: нет </br>
					- состав заказа </br>
					в заказе должна быть возможность прикреплять товары из связанной модели Товар, с </br>
					указанием количества соответствующего товара. При изменении - сумма пересчитывается </br>
					- сумма заказа </br>
					валидируемый формат: минимальная сумма заказа 3000 </br>
					Поля товара: </br>
					- название товара </br>
					валидируемый формат: минимальная длина навания - 3 символа </br>
					- цена товара </br>
					валидируемый формат: положительное число с плавающей точкой </br>
					Требования: </br>
					- в приложении должна быть реализована аутентификация администратора </br>
					- для аутентификации администратора использовать laravel breeze </br>
					- не использовать сторонние библиотеки для генерации crud </br>
					- для вывода списка заказов использовать библиотеку datatable </br></br>
					2. <span style="font-size:120%; color:green; font-style: italic;">Заполнить базу 1000 фиктивными заказами и 1000 </br>
					фиктивными товарами </span> </br></br>
					3. <span style="font-size:120%; color:green; font-style: italic;">Реализовать rest api для работы с заказами.</span> </br>
					- список заказов с возможностью указания количества заказов на странице, необходимую </br>
					страницу, фильтрацию результатов по дате </br>
					- создание заказа </br>
					- обновление заказа </br>
					- удаление заказа </br>
					- информация по отдельному заказу </br>
					Требования: </br>
					- возвращаемый формат json </br>
					- доступ должен осуществляться по генерируемому токену в пользователе </br>
					- api должен возвращать стандартные коды ответов на успешные запросы/неверный тип </br>
					данных/некорректные запросы с описанием ошибок </br>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
